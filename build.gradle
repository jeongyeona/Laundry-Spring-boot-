plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

// 컴파일 대상 Java 버전을 21로 맞춥니다.
sourceCompatibility = '21'
targetCompatibility = '21'

repositories {
	mavenCentral()
}

dependencies {
	// Spring Data / Web / Thymeleaf / Validation / Security 등
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// MySQL 드라이버
	runtimeOnly   'com.mysql:mysql-connector-j'

	// 개발 편의
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// WebJars (jQuery, Font-Awesome)
	implementation 'org.webjars:jquery:2.1.3'
	implementation 'org.webjars:font-awesome:5.15.1'

	// 테스트
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// MapStruct
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

	// ── JWT 모듈화
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly  'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly  'io.jsonwebtoken:jjwt-jackson:0.11.5'
}
tasks.withType(JavaCompile) {
	options.annotationProcessorPath = configurations.annotationProcessor
}

tasks.named('test') {
	useJUnitPlatform()
}
